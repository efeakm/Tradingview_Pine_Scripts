// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© xobiccc

//@version=5
strategy(title = "SP500 Pullback Strategy",
     overlay=true,
     initial_capital = 50000,
     default_qty_type = strategy.percent_of_equity,
     default_qty_value = 100, // %100 of balance is invested each trade
     commission_type = strategy.commission.cash_per_contract,
     commission_value = 0.005) // interactive brokers commission rate
    



// Get user input
i_ma1 = input.int(title = "MA 1 Length", defval = 200, step = 10, group = "Strategy Parameters", tooltip = "Long-term MA")
i_ma2 = input.int(title = "MA 2 Length", defval = 10, step =10, group = "Strategy Parameters", tooltip = "Short-term MA")
i_lowerclose = input.bool(title = "Exit on Lower Close", defval = false, group = "Strategy Parameters", tooltip = "Wait for a lower close instead of exiting above MA2")
i_stop_percent = input.float(title = "Stop Loss Percent", defval = 0.10, step = 0.1, group = "Strategy Parameters", tooltip = "Failsafe Stop Loss Percent Decline")
i_starttime = input.time(title = "Start Filter", defval = timestamp("01 Jan 1995 13:30 +0000"), group = "Time Filter", tooltip = "Start date and time to being the strategy")
i_endtime = input.time(title = "End Filter", defval = timestamp("1 Jan 2099 19:30 +0000"), group = "Time Filter", tooltip = "End date and time to stop the strategy")


// Get indicator values
ma1 = ta.sma(close, i_ma1)
ma2 = ta.sma(close, i_ma2)

// Check time constraints
time_constraint = time >= i_starttime and time <= i_endtime

// Check buy/sell conditions
var float buy_price = 0.0
buy_condition = close > ma1 and close < ma2 and strategy.position_size == 0 and time_constraint // check there is no open positions
sell_condition = close > ma2 and strategy.position_size > 0 and (not i_lowerclose or close < low[1]) // exit position if close is lower than previous low

stop_distance = strategy.position_size > 0 ? ( (buy_price - close) / buy_price) : na
stop_price = strategy.position_size > 0 ? buy_price * (1 - i_stop_percent) : na
stop_loss_condition = strategy.position_size > 0 and stop_distance > i_stop_percent


// Enter position
if buy_condition
    strategy.entry(id = "Long", direction = strategy.long)

//get buy_price
if buy_condition[1]
    buy_price := open

// Exit position
if sell_condition or stop_loss_condition
    strategy.close(id = 'Long', comment = 'Exit' + (stop_loss_condition ? "SL=true": ""))
    buy_price := na



plot(buy_price, color = color.lime, style = plot.style_linebr)
plot(stop_price, color = color.red, style = plot.style_linebr, offset = -1)

plot(ma1, color = color.red)
plot(ma2, color = color.green)


